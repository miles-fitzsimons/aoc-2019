<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="9ebc0217-3c84-4b9e-90f6-dda5a9555b09" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Test Namespace" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1UPk67o5yc8Xc3YVGtgQ1uLkEjR" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="GoToNamespace.includeLibraries" value="false" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./home/miles/dev/aoc-2019/resources" value="clj" />
    <property name="cursive.last.file.extension./home/miles/dev/aoc-2019/src" value="clj" />
    <property name="cursive.last.file.extension./home/miles/dev/aoc-2019/test" value="clj" />
  </component>
  <component name="ReplState" timestamp="1575365111794">{:repl-history {:ide [], :local [{:command &quot;(time (count (aoc-2019.day-3/get-path-coordinates [\&quot;R1000\&quot; \&quot;D117\&quot; \&quot;L888\&quot;])))&quot;, :offset 6, :ns &quot;aoc-2019.core&quot;} {:command &quot;path-aa&quot;, :offset 7, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (count (aoc-2019.day-3/get-path-coordinates\n               \n               (clojure.string/split\n                 \&quot;R1009,D117,L888,D799,L611,U766,L832,U859,L892,D79,R645,U191,L681,D787,R447,D429,L988,U536,L486,D832,R221,D619,R268,D545,L706,U234,L528,D453,R493,D24,L688,U658,L74,D281,R910,D849,L5,U16,R935,D399,L417,U609,R22,D782,L432,D83,L357,D982,L902,U294,L338,U102,R342,D621,R106,U979,L238,U158,R930,D948,L700,D808,R445,U897,R980,U227,L466,D416,R244,U396,R576,U157,R548,U795,R709,U550,R137,U212,L977,U786,L423,D792,R391,D974,R390\&quot;\n    #\&quot;,\&quot;             )\n               \n               )))&quot;, :offset 547, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (count (aoc-2019.day-3/get-path-coordinates\n               \n               (clojure.string/split\n                 \&quot;R1009,D117,L888,D799,L611,U766,L832,U859,L892,D79,R645,U191,L681,D787,R447,D429,L988,U536,L486,D832,R221,D619\&quot;\n    #\&quot;,\&quot;             )\n               \n               )))&quot;, :offset 230, :ns &quot;aoc-2019.core&quot;} {:command &quot;(range 1 100000)&quot;, :offset 15, :ns &quot;aoc-2019.core&quot;} {:command &quot;(do (range 1 100000) (str \&quot;fds\&quot;))&quot;, :offset 30, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (do (range 1 100000) (str \&quot;fds\&quot;)))&quot;, :offset 6, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def path-1 (\n              clojure.string/split \&quot;R1009,D117,L888,D799,L611,U766,L832,U859,L892,D79,R645,U191,L681,D787,R447,D429,L988,U536,L486,D832,R221,D619,R268,D545,L706,U234,L528,D453,R493,D24,L688,U658,L74,D281,R910,D849,L5,U16,R935,D399,L417,U609,R22,D782,L432,D83,L357,D982,L902,U294,L338,U102,R342,D621,R106,U979,L238,U158,R930,D948,L700,D808,R445,U897,R980,U227,L466,D416,R244,U396,R576,U157,R548,U795,R709,U550,R137,U212,L977,U786,L423,D792,R391,D974,R390,U771,R270,D409,L917,D9,R412,D699,L170,D276,L912,U710,R814,U656,R4,D800,R596,U970,L194,U315,L845,D490,L303,U514,L675,D737,L880,D86,L253,D525,R861,D5,R424,D113,L764,D900,R485,D421,R125,U684,R53,U96,L871,U260,R456,U378,L448,D450,L903,D482,R750,U961,R264,D501,R605,D367,R550,U642,R228,U164,L343,U868,R595,D318,R452,U845,L571,D281,R49,D889,L481,U963,R182,U358,R454,U267,L790,D252,R455,D188,L73,U256,L835,D816,R503,U895,L259,U418,R642,U818,L187,U355,R772,U466,R21,U91,R707,D349,L200,U305,R931,D982,L334,D416,L247,D935,L326,U449,L398,D914,R602,U10,R762,D944,L639,D141,L457,U579,L198,U527,R750,U167,R816,D753,R850,D281,L712,D583,L172,D254,L544,D456,R966,U839,R673,D479,R730,D912,R992,D969,R766,U205,R477,D719,R172,D735,R998,D687,R698,D407,R172,U945,R199,U348,L256,D876,R580,U770,L483,D437,R353,D214,R619,U541,R234,D962,R842,U639,R520,D354,L279,D15,R42,U138,L321,D376,L628,D893,L670,D574,L339,U298,L321,D120,L370,U408,L333,D353,L263,D79,R535,D487,R113,D638,R623,D59,L508,D866,R315,U166,L534,U927,L401,D626,L19,D994,L778,D317,L936,U207,L768,U948,R452,U165,R864,D283,L874\&quot; #\&quot;,\&quot;\n              ))&quot;, :offset 1533, :ns &quot;aoc-2019.core&quot;} {:command &quot;(map #(rest %) path-1)&quot;, :offset 13, :ns &quot;aoc-2019.core&quot;} {:command &quot;(map #(clojure.string/join (rest %)) path-1)&quot;, :offset 27, :ns &quot;aoc-2019.core&quot;} {:command &quot;(map #(read-string (clojure.string/join (rest %))) path-1)&quot;, :offset 19, :ns &quot;aoc-2019.core&quot;} {:command &quot;(reduce + (map #(read-string (clojure.string/join (rest %))) path-1))&quot;, :offset 10, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-up-2 [track steps]\n  (conj track ))&quot;, :offset 44, :ns &quot;aoc-2019.core&quot;} {:command &quot;('(1 2 3) 2)&quot;, :offset 11, :ns &quot;aoc-2019.core&quot;} {:command &quot;( 2'(1 2 3) )&quot;, :offset 3, :ns &quot;aoc-2019.core&quot;} {:command &quot;( 2 '(1 2 3) )&quot;, :offset 4, :ns &quot;aoc-2019.core&quot;} {:command &quot;( get '(1 2 3) 2 )&quot;, :offset 16, :ns &quot;aoc-2019.core&quot;} {:command &quot;( get '(1 2 3) 1 )&quot;, :offset 16, :ns &quot;aoc-2019.core&quot;} {:command &quot;(vec (repeat 2))&quot;, :offset 14, :ns &quot;aoc-2019.core&quot;} {:command &quot;f&quot;, :offset 1, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 4 2)&quot;, :offset 11, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat (inc 4) 2)&quot;, :offset 13, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 4 (inc 2))&quot;, :offset 15, :ns &quot;aoc-2019.core&quot;} {:command &quot;(vec \n  (repeat 4 (inc 2)))&quot;, :offset 8, :ns &quot;aoc-2019.core&quot;} {:command &quot;(range (100) (repeat 100 2))&quot;, :offset 26, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 2 5)&quot;, :offset 11, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 2(repeat 2 5))&quot;, :offset 9, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 2 (repeat 2 5))&quot;, :offset 10, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-up-2 [track steps]\n  (-&gt;&gt; 5 (repeat 2)))&quot;, :offset 48, :ns &quot;aoc-2019.core&quot;} {:command &quot;(--&gt; 5 (repeat 2))&quot;, :offset 16, :ns &quot;aoc-2019.core&quot;} {:command &quot;(-&gt;&gt; 5 (repeat 2))&quot;, :offset 3, :ns &quot;aoc-2019.core&quot;} {:command &quot;(-&gt;&gt; 5 (repeat 2) vec )&quot;, :offset 22, :ns &quot;aoc-2019.core&quot;} {:command &quot;(-&gt;&gt; 5 \n     (repeat 2)\n     vec)&quot;, :offset 32, :ns &quot;aoc-2019.core&quot;} {:command &quot;(-&gt;&gt; 5 \n     (repeat 2)\n     vec\n     (repeat 2)\n     vec)&quot;, :offset 57, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 0 10)&quot;, :offset 12, :ns &quot;aoc-2019.core&quot;} {:command &quot;(repeat 10 0)&quot;, :offset 11, :ns &quot;aoc-2019.core&quot;} {:command &quot;(interleave (range 1 11) (repeat 10 0))&quot;, :offset 23, :ns &quot;aoc-2019.core&quot;} {:command &quot;(partition 2 (interleave (vec (range 1 11)) (vec (repeat 10 0))))&quot;, :offset 49, :ns &quot;aoc-2019.core&quot;} {:command &quot;(vec (partition 2 (interleave (vec (range 1 11)) (vec (repeat 10 0)))))&quot;, :offset 5, :ns &quot;aoc-2019.core&quot;} {:command &quot;(partition 2 (interleave (range 1 11) (repeat 10 0)))&quot;, :offset 13, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right-2 [track steps]\n  ())&quot;, :offset 36, :ns &quot;aoc-2019.core&quot;} {:command &quot;(concat (partition 2 (interleave (range 1 11) (repeat 10 0))))&quot;, :offset 62, :ns &quot;aoc-2019.core&quot;} {:command &quot;(concat '(1 2 3) '(3 4 5))&quot;, :offset 24, :ns &quot;aoc-2019.core&quot;} {:command &quot;(concat '('(1 2)) '(3 4 5))&quot;, :offset 16, :ns &quot;aoc-2019.core&quot;} {:command &quot;(concat '((1 2)) '(3 4 5))&quot;, :offset 10, :ns &quot;aoc-2019.core&quot;} {:command &quot;(concat '((1 2)) '(3 4))&quot;, :offset 22, :ns &quot;aoc-2019.core&quot;} {:command &quot;(concat '((1 2)) '((3 4)))&quot;, :offset 20, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right-2 [track steps]\n  (let [start-x (first track)\n        start-y (second track)]\n    (concat track (partition 2 (interleave (range start-x (+ start-x steps)) (repeat steps start-y))))))&quot;, :offset 193, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right-2 [track steps]\n  (let [start-x (first track)\n        start-y (second track)]\n    start-x #_(concat track (partition 2 (interleave (range start-x (+ start-x steps)) (repeat steps start-y))))))&quot;, :offset 106, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right-2 [track steps]\n  (let [start-x (first (last track))\n        start-y (second (last track))]\n    start-x #_(concat track (partition 2 (interleave (range start-x (+ start-x steps)) (repeat steps start-y))))))&quot;, :offset 100, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right-2 [track steps]\n  (let [start-x (first (last track))\n        start-y (second (last track))]\n    (concat track (partition 2 (interleave (range start-x (+ start-x steps)) (repeat steps start-y))))))&quot;, :offset 113, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right-2 [track steps]\n  (let [start-x (inc (first (last track)))\n        start-y (second (last track))]\n    (concat track (partition 2 (interleave (range start-x (+ start-x steps)) (repeat steps start-y))))))&quot;, :offset 54, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-right-2 '((0 0)) 3)&quot;, :offset 24, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-right [track steps]\n  (loop [track track\n         count 1]\n    (if (&lt;= count steps)\n      (recur (conj track [(+ ((last track) 0) 1) ((last track) 1)]) (inc count))\n      track)))\n&quot;, :offset 191, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-right [[0 0]] 3)&quot;, :offset 21, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (move-right [[0 0]] 3))&quot;, :offset 6, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (move-right-2 '((0 0)) 3))&quot;, :offset 6, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (move-right-2 '((0 0)) 1000))&quot;, :offset 33, :ns &quot;aoc-2019.core&quot;} {:command &quot;(time (move-right [[0 0]] 1000))&quot;, :offset 30, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-right-2 '((0 0) (1 0) (2 0)) 3)&quot;, :offset 32, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-left [track steps]\n  (let [start-x (dec (first (last track)))\n        start-y (second (last track))]\n    (concat track (partition 2 (interleave ())))))&quot;, :offset 156, :ns &quot;aoc-2019.core&quot;} {:command &quot;(range 10 0)&quot;, :offset 11, :ns &quot;aoc-2019.core&quot;} {:command &quot;(range 10 0 -1)&quot;, :offset 14, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-left [track steps]\n  (let [start-x (dec (first (last track)))\n        start-y (second (last track))]\n    (concat track (partition 2 (interleave (range start-x (- start-x steps) -1) (repeat steps start-y))))))&quot;, :offset 213, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-left '((0 0)) 10)&quot;, :offset 22, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-left '((0 0) (1 0) (2 0)) 10)&quot;, :offset 29, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def path-1 (clojure.string/split \&quot;R8,U5,L5,D3\&quot; #\&quot;,\&quot;))&quot;, :offset 51, :ns &quot;aoc-2019.core&quot;} {:command &quot;path-1&quot;, :offset 6, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def path-2 (clojure.string/split \&quot;U7,R6,D4,L4\&quot; #\&quot;,\&quot;))&quot;, :offset 46, :ns &quot;aoc-2019.core&quot;} {:command &quot;path-2&quot;, :offset 6, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-up [track steps]\n  (let [start-x (first (last track))\n        start-y (inc (second (last track)))]\n    (concat track (partition 2 (interleave (repeat steps start-x) (range start-y (+ start-y steps)))))))&quot;, :offset 207, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-up '((0 0)) 3)&quot;, :offset 19, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-up '((0 0) (0 -1 (0 -2))) 10)&quot;, :offset 34, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-up '((0 0) (0 -1) (0 -2)) 10)&quot;, :offset 29, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-down [track steps]\n  (let [start-x (first (last track))\n        start-y (dec (second (last track)))]\n    concat track (partition 2 (interleave (repeat steps start-x) (range start-y (- start-y steps))))))&quot;, :offset 208, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-down [track steps]\n  (let [start-x (first (last track))\n        start-y (dec (second (last track)))]\n    concat track (partition 2 (interleave (repeat steps start-x) (range start-y (- start-y steps) -1)))))&quot;, :offset 212, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn move-down [track steps]\n  (let [start-x (first (last track))\n        start-y (dec (second (last track)))]\n    (concat track (partition 2 (interleave (repeat steps start-x) (range start-y (- start-y steps) -1))))))&quot;, :offset 117, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-down '((0 0) (0 -1) (0 -2)) 10)&quot;, :offset 10, :ns &quot;aoc-2019.core&quot;} {:command &quot;(move-down '((0 0) (0 1) (0 2)) 10)&quot;, :offset 28, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-min-distance path-1 path-2)&quot;, :offset 46, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-min-distance \n  (clojure.string/split \&quot;R75,D30,R83,U83,L12,D49,R71,U7,L72\&quot; #\&quot;,\&quot;)\n  (clojure.string/split \&quot;U62,R66,U55,R34,D71,R55,D58,R83\&quot; #\&quot;,\&quot;)\n  \n  \n  \n  \n  \n  )&quot;, :offset 157, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-min-distance \n  (clojure.string/split \&quot;R98,U47,R26,D63,R33,U87,L62,D20,R33,U53,R51\&quot; #\&quot;,\&quot;)\n  (clojure.string/split \&quot;U98,R91,D20,R16,D67,R40,U7,R15,U6,R7\&quot; #\&quot;,\&quot;)\n  \n  \n  \n  \n  \n  )&quot;, :offset 171, :ns &quot;aoc-2019.core&quot;} {:command &quot;(require 'aoc-2019.day-3)&quot;, :offset 24, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-path-coordinates\n  (clojure.string/split\n    \&quot;L995,D93,L293,U447,L793,D605,R497,D155,L542,D570,R113,D779,L510,U367,L71,D980,R237,U290,L983,U49,R745,U182,L922,D174,L189,D629,R315,D203,R533,U72,L981,D848,L616,U654,R445,D864,R526,D668,L678,U378,L740,D840,L202,D429,R136,D998,L116,D554,L893,U759,R617,U942,R999,U582,L220,U447,R895,D13,R217,U743,L865,U950,R91,D381,R662,D518,L798,D637,L213,D93,L231,D185,R704,U581,L268,U773,R405,U862,R796,U73,L891,U553,L952,U450,R778,D868,R329,D669,L182,U378,L933,D83,R574,U807,R785,D278,R139,D362,R8,U546,R651,U241,L462,D309,L261,D307,L85,U701,L913,U271,R814,U723,L777,D256,R417,U814,L461,U652,R198,D747,R914,U520,R806,U956,L771,D229,R984,U685,R663,D812,R650,U214,R839,U574,L10,U66,R644,D371,L917,D819,L73,D236,R277,U611,R390,U723,L129,D496,L552,D451,R584,U105,L805,U165,R179,D372,L405,D702,R14,U332,L893,D419,R342,D146,R907,D672,L316,U257,L903,U919,L942,U771,R879,U624,L280,U150,L320,U220,R590,D242,R744,U291,R562,U418,L898,U66,L564,U495,R837,D555,L739,D780,R409,D122,L426,D857,R937,D600,R428,D592,R727,U917,R256,D680,L422,U630,L14,U240,R617,D664,L961,D554,L302,U925,L376,D187,L700,D31,L762,U397,L554,D217,R679,D683,R680,D572,R54,D164,L940,D523,R140,U52,L506,D638,R331,D415,R389,D884,R410,D62,R691,U665,R889,U864,L663,D690,R487,U811,L190,U780,L758,U267,R155,D344,L133,D137,R93,D229,L729,U878,L889,D603,R288,U890,R251,U531,L249,D995,R863,D257,R655,D311,R874,U356,L833,U151,L741,U246,R694,D899,L48,U915,L900,U757,L861,U402,R971,U537,R460,D844,R54,U956,L151,U74,R892,U248,R677,D881,R99,D931,R427\&quot;\n    \&quot;#,\&quot;\n    )\n  \n  )&quot;, :offset 1543, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-path-coordinates\n  (clojure.string/split\n    \&quot;L995,D93,L293,U447,L793,D605,R497,D155,L542,D570,R113,D779,L510,U367,L71,D980,R237,U290,L983,U49,R745,U182,L922,D174,L189,D629,R315,D203,R533,U72,L981,D848,L616,U654,R445,D864,R526,D668,L678,U378,L740,D840,L202,D429,R136,D998,L116,D554,L893,U759,R617,U942,R999,U582,L220,U447,R895,D13,R217,U743,L865,U950,R91,D381,R662,D518,L798,D637,L213,D93,L231,D185,R704,U581,L268,U773,R405,U862,R796,U73,L891,U553,L952,U450,R778,D868,R329,D669,L182,U378,L933,D83,R574,U807,R785,D278,R139,D362,R8,U546,R651,U241,L462,D309,L261,D307,L85,U701,L913,U271,R814,U723,L777,D256,R417,U814,L461,U652,R198,D747,R914,U520,R806,U956,L771,D229,R984,U685,R663,D812,R650,U214,R839,U574,L10,U66,R644,D371,L917,D819,L73,D236,R277,U611,R390,U723,L129,D496,L552,D451,R584,U105,L805,U165,R179,D372,L405,D702,R14,U332,L893,D419,R342,D146,R907,D672,L316,U257,L903,U919,L942,U771,R879,U624,L280,U150,L320,U220,R590,D242,R744,U291,R562,U418,L898,U66,L564,U495,R837,D555,L739,D780,R409,D122,L426,D857,R937,D600,R428,D592,R727,U917,R256,D680,L422,U630,L14,U240,R617,D664,L961,D554,L302,U925,L376,D187,L700,D31,L762,U397,L554,D217,R679,D683,R680,D572,R54,D164,L940,D523,R140,U52,L506,D638,R331,D415,R389,D884,R410,D62,R691,U665,R889,U864,L663,D690,R487,U811,L190,U780,L758,U267,R155,D344,L133,D137,R93,D229,L729,U878,L889,D603,R288,U890,R251,U531,L249,D995,R863,D257,R655,D311,R874,U356,L833,U151,L741,U246,R694,D899,L48,U915,L900,U757,L861,U402,R971,U537,R460,D844,R54,U956,L151,U74,R892,U248,R677,D881,R99,D931,R427\&quot;\n    #\&quot;,\&quot;\n    )\n  \n  )&quot;, :offset 1550, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def aa (aoc-2019.day-3/get-path-coordinates\n  (clojure.string/split\n    \&quot;L995,D93,L293,U447,L793,D605,R497,D155,L542,D570,R113,D779,L510,U367,L71,D980,R237,U290,L983,U49,R745,U182,L922,D174,L189,D629,R315,D203,R533,U72,L981,D848,L616,U654,R445,D864,R526,D668,L678,U378,L740,D840,L202,D429,R136,D998,L116,D554,L893,U759,R617,U942,R999,U582,L220,U447,R895,D13,R217,U743,L865,U950,R91,D381,R662,D518,L798,D637,L213,D93,L231,D185,R704,U581,L268,U773,R405,U862,R796,U73,L891,U553,L952,U450,R778,D868,R329,D669,L182,U378,L933,D83,R574,U807,R785,D278,R139,D362,R8,U546,R651,U241,L462,D309,L261,D307,L85,U701,L913,U271,R814,U723,L777,D256,R417,U814,L461,U652,R198,D747,R914,U520,R806,U956,L771,D229,R984,U685,R663,D812,R650,U214,R839,U574,L10,U66,R644,D371,L917,D819,L73,D236,R277,U611,R390,U723,L129,D496,L552,D451,R584,U105,L805,U165,R179,D372,L405,D702,R14,U332,L893,D419,R342,D146,R907,D672,L316,U257,L903,U919,L942,U771,R879,U624,L280,U150,L320,U220,R590,D242,R744,U291,R562,U418,L898,U66,L564,U495,R837,D555,L739,D780,R409,D122,L426,D857,R937,D600,R428,D592,R727,U917,R256,D680,L422,U630,L14,U240,R617,D664,L961,D554,L302,U925,L376,D187,L700,D31,L762,U397,L554,D217,R679,D683,R680,D572,R54,D164,L940,D523,R140,U52,L506,D638,R331,D415,R389,D884,R410,D62,R691,U665,R889,U864,L663,D690,R487,U811,L190,U780,L758,U267,R155,D344,L133,D137,R93,D229,L729,U878,L889,D603,R288,U890,R251,U531,L249,D995,R863,D257,R655,D311,R874,U356,L833,U151,L741,U246,R694,D899,L48,U915,L900,U757,L861,U402,R971,U537,R460,D844,R54,U956,L151,U74,R892,U248,R677,D881,R99,D931,R427\&quot;\n    #\&quot;,\&quot;\n    )\n  \n  ))&quot;, :offset 8, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def bb (aoc-2019.day-3/get-path-coordinates\n  (clojure.string/split\n    \&quot;R1009,D117,L888,D799,L611,U766,L832,U859,L892,D79,R645,U191,L681,D787,R447,D429,L988,U536,L486,D832,R221,D619,R268,D545,L706,U234,L528,D453,R493,D24,L688,U658,L74,D281,R910,D849,L5,U16,R935,D399,L417,U609,R22,D782,L432,D83,L357,D982,L902,U294,L338,U102,R342,D621,R106,U979,L238,U158,R930,D948,L700,D808,R445,U897,R980,U227,L466,D416,R244,U396,R576,U157,R548,U795,R709,U550,R137,U212,L977,U786,L423,D792,R391,D974,R390,U771,R270,D409,L917,D9,R412,D699,L170,D276,L912,U710,R814,U656,R4,D800,R596,U970,L194,U315,L845,D490,L303,U514,L675,D737,L880,D86,L253,D525,R861,D5,R424,D113,L764,D900,R485,D421,R125,U684,R53,U96,L871,U260,R456,U378,L448,D450,L903,D482,R750,U961,R264,D501,R605,D367,R550,U642,R228,U164,L343,U868,R595,D318,R452,U845,L571,D281,R49,D889,L481,U963,R182,U358,R454,U267,L790,D252,R455,D188,L73,U256,L835,D816,R503,U895,L259,U418,R642,U818,L187,U355,R772,U466,R21,U91,R707,D349,L200,U305,R931,D982,L334,D416,L247,D935,L326,U449,L398,D914,R602,U10,R762,D944,L639,D141,L457,U579,L198,U527,R750,U167,R816,D753,R850,D281,L712,D583,L172,D254,L544,D456,R966,U839,R673,D479,R730,D912,R992,D969,R766,U205,R477,D719,R172,D735,R998,D687,R698,D407,R172,U945,R199,U348,L256,D876,R580,U770,L483,D437,R353,D214,R619,U541,R234,D962,R842,U639,R520,D354,L279,D15,R42,U138,L321,D376,L628,D893,L670,D574,L339,U298,L321,D120,L370,U408,L333,D353,L263,D79,R535,D487,R113,D638,R623,D59,L508,D866,R315,U166,L534,U927,L401,D626,L19,D994,L778,D317,L936,U207,L768,U948,R452,U165,R864,D283,L874\&quot;\n    #\&quot;,\&quot;\n    )\n  \n  ))&quot;, :offset 1552, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-duplicates bb aa)&quot;, :offset 36, :ns &quot;aoc-2019.core&quot;} {:command &quot;(defn get-duplicates []\n  (for [[coordinates freq] (frequencies (concat bb aa))\n        :when (&gt; freq 1)]\n    coordinates))\n&quot;, :offset 77, :ns &quot;aoc-2019.core&quot;} {:command &quot;(get-duplicates)&quot;, :offset 15, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def cc get-duplicates)&quot;, :offset 8, :ns &quot;aoc-2019.core&quot;} {:command &quot;(def cc (get-duplicates))&quot;, :offset 9, :ns &quot;aoc-2019.core&quot;} {:command &quot;cc&quot;, :offset 2, :ns &quot;aoc-2019.core&quot;} {:command &quot;(apply min (map #(+ (Math/abs (% 0)) (Math/abs (% 1))) cc))&quot;, :offset 57, :ns &quot;aoc-2019.core&quot;} {:command &quot;(apply min (map #(+ (Math/abs (% 0)) (Math/abs (% 1))) coordinates))&quot;, :offset 68} {:command &quot;(map #(+ (Math/abs (% 0)) (Math/abs (% 1))) cc)&quot;, :offset 2, :ns &quot;aoc-2019.core&quot;} {:command &quot;4&quot;, :offset 1, :ns &quot;aoc-2019.core&quot;} {:command &quot;(map #(+ (Math/abs (first %)) (Math/abs (second %))) cc)&quot;, :offset 49, :ns &quot;aoc-2019.core&quot;} {:command &quot;(apply min (map #(+ (Math/abs (first %)) (Math/abs (second %))) cc))&quot;, :offset 11, :ns &quot;aoc-2019.core&quot;} {:command &quot;(aoc-2019.day-3/get-min-distance \n  (clojure.string/split \&quot;R1009,D117,L888,D799,L611,U766,L832,U859,L892,D79,R645,U191,L681,D787,R447,D429,L988,U536,L486,D832,R221,D619,R268,D545,L706,U234,L528,D453,R493,D24,L688,U658,L74,D281,R910,D849,L5,U16,R935,D399,L417,U609,R22,D782,L432,D83,L357,D982,L902,U294,L338,U102,R342,D621,R106,U979,L238,U158,R930,D948,L700,D808,R445,U897,R980,U227,L466,D416,R244,U396,R576,U157,R548,U795,R709,U550,R137,U212,L977,U786,L423,D792,R391,D974,R390,U771,R270,D409,L917,D9,R412,D699,L170,D276,L912,U710,R814,U656,R4,D800,R596,U970,L194,U315,L845,D490,L303,U514,L675,D737,L880,D86,L253,D525,R861,D5,R424,D113,L764,D900,R485,D421,R125,U684,R53,U96,L871,U260,R456,U378,L448,D450,L903,D482,R750,U961,R264,D501,R605,D367,R550,U642,R228,U164,L343,U868,R595,D318,R452,U845,L571,D281,R49,D889,L481,U963,R182,U358,R454,U267,L790,D252,R455,D188,L73,U256,L835,D816,R503,U895,L259,U418,R642,U818,L187,U355,R772,U466,R21,U91,R707,D349,L200,U305,R931,D982,L334,D416,L247,D935,L326,U449,L398,D914,R602,U10,R762,D944,L639,D141,L457,U579,L198,U527,R750,U167,R816,D753,R850,D281,L712,D583,L172,D254,L544,D456,R966,U839,R673,D479,R730,D912,R992,D969,R766,U205,R477,D719,R172,D735,R998,D687,R698,D407,R172,U945,R199,U348,L256,D876,R580,U770,L483,D437,R353,D214,R619,U541,R234,D962,R842,U639,R520,D354,L279,D15,R42,U138,L321,D376,L628,D893,L670,D574,L339,U298,L321,D120,L370,U408,L333,D353,L263,D79,R535,D487,R113,D638,R623,D59,L508,D866,R315,U166,L534,U927,L401,D626,L19,D994,L778,D317,L936,U207,L768,U948,R452,U165,R864,D283,L874\&quot; #\&quot;,\&quot;)\n  (clojure.string/split \&quot;L995,D93,L293,U447,L793,D605,R497,D155,L542,D570,R113,D779,L510,U367,L71,D980,R237,U290,L983,U49,R745,U182,L922,D174,L189,D629,R315,D203,R533,U72,L981,D848,L616,U654,R445,D864,R526,D668,L678,U378,L740,D840,L202,D429,R136,D998,L116,D554,L893,U759,R617,U942,R999,U582,L220,U447,R895,D13,R217,U743,L865,U950,R91,D381,R662,D518,L798,D637,L213,D93,L231,D185,R704,U581,L268,U773,R405,U862,R796,U73,L891,U553,L952,U450,R778,D868,R329,D669,L182,U378,L933,D83,R574,U807,R785,D278,R139,D362,R8,U546,R651,U241,L462,D309,L261,D307,L85,U701,L913,U271,R814,U723,L777,D256,R417,U814,L461,U652,R198,D747,R914,U520,R806,U956,L771,D229,R984,U685,R663,D812,R650,U214,R839,U574,L10,U66,R644,D371,L917,D819,L73,D236,R277,U611,R390,U723,L129,D496,L552,D451,R584,U105,L805,U165,R179,D372,L405,D702,R14,U332,L893,D419,R342,D146,R907,D672,L316,U257,L903,U919,L942,U771,R879,U624,L280,U150,L320,U220,R590,D242,R744,U291,R562,U418,L898,U66,L564,U495,R837,D555,L739,D780,R409,D122,L426,D857,R937,D600,R428,D592,R727,U917,R256,D680,L422,U630,L14,U240,R617,D664,L961,D554,L302,U925,L376,D187,L700,D31,L762,U397,L554,D217,R679,D683,R680,D572,R54,D164,L940,D523,R140,U52,L506,D638,R331,D415,R389,D884,R410,D62,R691,U665,R889,U864,L663,D690,R487,U811,L190,U780,L758,U267,R155,D344,L133,D137,R93,D229,L729,U878,L889,D603,R288,U890,R251,U531,L249,D995,R863,D257,R655,D311,R874,U356,L833,U151,L741,U246,R694,D899,L48,U915,L900,U757,L861,U402,R971,U537,R460,D844,R54,U956,L151,U74,R892,U248,R677,D881,R99,D931,R427\&quot; #\&quot;,\&quot;)\n  \n  \n  \n  \n  \n  )&quot;, :offset 3049, :ns &quot;aoc-2019.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="REPL for aoc-2019" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="aoc-2019" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for aoc-2019" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9ebc0217-3c84-4b9e-90f6-dda5a9555b09" name="Default Changelist" comment="" />
      <created>1575265439837</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1575265439837</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>